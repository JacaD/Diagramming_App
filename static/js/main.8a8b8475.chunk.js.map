{"version":3,"sources":["store/reducers/index.js","store/reducers/modified.js","store/reducers/diagram.js","store/store.js","store/actions/index.js","goJs/templates/nodeTemplates/rectangleTemplate.js","goJs/templates/nodeTemplates/triangleTemplate.js","goJs/templates/nodeTemplates/roundedRectangleTemplate.js","goJs/templates/nodeTemplates.js","goJs/templates/groupTemplate.js","goJs/templates/linkTemplate.js","goJs/validators/linkValidation.js","goJs/shortcuts/shortcuts.js","goJs/elements/diagram.js","components/diagram.jsx","goJs/elements/palette.js","components/palette.jsx","components/upperBar.jsx","components/common/select.jsx","components/inspector.jsx","goJs/tools/tools.js","components/tools.jsx","goJs/thumbnails/thumbnails.js","components/thumbnail.jsx","components/menu.jsx","App.js","serviceWorker.js","index.js"],"names":["combineReducers","modified","state","arguments","length","undefined","action","type","Object","objectSpread","diagram","store","createStore","reducers","diagramModified","getRectangleTemplate","$","go","GraphObject","make","Node","Binding","Point","parse","makeTwoWay","stringify","Panel","Shape","stroke","portId","cursor","fill","TextBlock","wrap","WrapFit","font","ofObject","stretch","Fill","resizable","minSize","Size","mouseDrop","e","nod","grp","addMembers","selection","commandHandler","addTopLevelParts","currentTool","doCancel","finishDrop","containingGroup","getTriangleTemplate","getRoundedRectangleTemplate","getNodeTemplates","templateMap","Map","add","getGroupTemplate","Group","background","computesBoundsAfterDrag","handlesDragDropForMembers","layout","GridLayout","wrappingWidth","Infinity","alignment","Position","cellSize","spacing","name","Spot","Left","editable","parameter1","size","width","height","Placeholder","padding","getLinkTemplate","Link","routing","Orthogonal","corner","curve","JumpOver","toShortLength","relinkableFrom","relinkableTo","reshapable","resegmentable","isPanelMain","strokeWidth","toArrow","isMultiline","textAlign","addLinkValidationToDiagram","sameFigure","fromnode","fromport","tonode","toport","data","figure","toolManager","linkingTool","linkValidation","relinkingTool","model","linkFromPortIdProperty","linkToPortIdProperty","temporaryLink","addModelChangedListener","propertyName","object","connectedLinks","findNodeForKey","key","findLinksConnected","toDelete","next","link","value","fromNode","push","toNode","startTransaction","removeParts","commitTransaction","checkLinks","addShortcutsToDiagram","x","y","document","addEventListener","pageX","pageY","shiftKey","addNodeData","color","category","from","to","loc","position","div","offsetLeft","offsetTop","getDiagram","diagramDiv","modifiedReducer","Diagram","initialContentAlignment","Center","allowDrop","scrollsPageOnFocus","undoManager.isEnabled","toolManager.mouseWheelBehavior","ToolManager","WheelZoom","commandHandler.archetypeGroupData","isGroup","nodeTemplateMap","groupTemplate","linkTemplate","addDiagramListener","this","props","id","react_default","a","createElement","Component","mapDispatchToProps","connect","getPalette","paletteDiv","palette","Palette","GraphLinksModel","Name","_ref","Select","options","onChange","def","rest","objectWithoutProperties","assign","defaultValue","map","option","n","label","Inspector","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inspectObject","inspectedObject","first","updateFields","setState","nameInput","colorSelect","figureSelect","update","setDataProperty","colors","figures","categorySelect","_this2","isTransactionFinished","_this3","target","common_select","getTools","onClick","increaseZoom","decreaseZoom","undo","redo","sessionStorage","savedDiagram","toJson","isModified","Model","fromJson","Tools","keys","tool","className","makeThumbnail","makeImage","Thumbnail","image","src","alt","inspector","components_tools","thumbnail","App","Fragment","upperBar","components_palette","components_diagram","menu","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a8b8475.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { modified } from \"./modified\";\r\nimport { diagram } from \"./diagram\";\r\n\r\nexport default combineReducers({\r\n  modified,\r\n  diagram\r\n});\r\n","export const modified = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"DIAGRAM_MODIFIED\":\r\n      return { ...state, modified: action.modified };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const diagram = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"DIAGRAM\":\r\n      return { ...state, diagram: action.diagram };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport const store = createStore(reducers, { modified: false });\r\n","export const diagramModified = modified => ({\r\n  type: \"DIAGRAM_MODIFIED\",\r\n  modified\r\n});\r\n\r\nexport const diagram = diagram => ({\r\n  type: \"DIAGRAM\",\r\n  diagram\r\n});\r\n","import go from \"gojs\";\r\n\r\nfunction getRectangleTemplate() {\r\n  let $ = go.GraphObject.make;\r\n\r\n  function finishDrop(e, grp) {\r\n    var ok =\r\n      grp !== null\r\n        ? grp.addMembers(grp.diagram.selection, true)\r\n        : e.diagram.commandHandler.addTopLevelParts(e.diagram.selection, true);\r\n    if (!ok) e.diagram.currentTool.doCancel();\r\n  }\r\n\r\n  return $(\r\n    go.Node,\r\n    \"Spot\",\r\n    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n      go.Point.stringify\r\n    ),\r\n    $(\r\n      go.Panel,\r\n      \"Auto\",\r\n      $(\r\n        go.Shape,\r\n        \"Rectangle\",\r\n        {\r\n          stroke: \"white\",\r\n          portId: \"\",\r\n          cursor: \"pointer\",\r\n          fill: \"Green\"\r\n        },\r\n        new go.Binding(\"fromLinkable\", \"from\"),\r\n        new go.Binding(\"toLinkable\", \"to\"),\r\n        new go.Binding(\"fill\", \"color\").makeTwoWay(),\r\n        new go.Binding(\"figure\").makeTwoWay()\r\n      ),\r\n      $(\r\n        go.TextBlock,\r\n        \"\",\r\n        {\r\n          wrap: go.TextBlock.WrapFit,\r\n          font: \"bold 11pt Helvetica, Arial, sans-serif\",\r\n          stroke: \"whitesmoke\"\r\n        },\r\n        new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n        new go.Binding(\"naturalBounds\", \"textSize\").ofObject()\r\n      )\r\n    ),\r\n    {\r\n      stretch: go.GraphObject.Fill,\r\n      resizable: true,\r\n      minSize: new go.Size(40, 40),\r\n      mouseDrop: function(e, nod) {\r\n        finishDrop(e, nod.containingGroup);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nexport default getRectangleTemplate;\r\n","import go from \"gojs\";\r\n\r\nfunction getTriangleTemplate() {\r\n  let $ = go.GraphObject.make;\r\n\r\n  function finishDrop(e, grp) {\r\n    var ok =\r\n      grp !== null\r\n        ? grp.addMembers(grp.diagram.selection, true)\r\n        : e.diagram.commandHandler.addTopLevelParts(e.diagram.selection, true);\r\n    if (!ok) e.diagram.currentTool.doCancel();\r\n  }\r\n\r\n  return $(\r\n    go.Node,\r\n    \"Spot\",\r\n    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n      go.Point.stringify\r\n    ),\r\n    $(\r\n      go.Panel,\r\n      \"Auto\",\r\n      $(\r\n        go.Shape,\r\n        \"Triangle\",\r\n        {\r\n          stroke: \"white\",\r\n          portId: \"\",\r\n          cursor: \"pointer\",\r\n          fill: \"Red\"\r\n        },\r\n        new go.Binding(\"fromLinkable\", \"from\"),\r\n        new go.Binding(\"toLinkable\", \"to\"),\r\n        new go.Binding(\"fill\", \"color\"),\r\n        new go.Binding(\"figure\").makeTwoWay()\r\n      ),\r\n      $(\r\n        go.TextBlock,\r\n        \"\",\r\n        {\r\n          wrap: go.TextBlock.WrapFit,\r\n          font: \"bold 11pt Helvetica, Arial, sans-serif\",\r\n          stroke: \"whitesmoke\"\r\n        },\r\n        new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n        new go.Binding(\"naturalBounds\", \"textSize\").ofObject()\r\n      )\r\n    ),\r\n    {\r\n      stretch: go.GraphObject.Fill,\r\n      resizable: true,\r\n      minSize: new go.Size(40, 40),\r\n      mouseDrop: function(e, nod) {\r\n        finishDrop(e, nod.containingGroup);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nexport default getTriangleTemplate;\r\n","import go from \"gojs\";\r\n\r\nfunction getRoundedRectangleTemplate() {\r\n  let $ = go.GraphObject.make;\r\n\r\n  function finishDrop(e, grp) {\r\n    var ok =\r\n      grp !== null\r\n        ? grp.addMembers(grp.diagram.selection, true)\r\n        : e.diagram.commandHandler.addTopLevelParts(e.diagram.selection, true);\r\n    if (!ok) e.diagram.currentTool.doCancel();\r\n  }\r\n\r\n  return $(\r\n    go.Node,\r\n    \"Spot\",\r\n    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n      go.Point.stringify\r\n    ),\r\n    $(\r\n      go.Panel,\r\n      \"Auto\",\r\n      $(\r\n        go.Shape,\r\n        \"RoundedRectangle\",\r\n        {\r\n          stroke: \"white\",\r\n          portId: \"\",\r\n          cursor: \"pointer\",\r\n          fill: \"Blue\"\r\n        },\r\n        new go.Binding(\"fromLinkable\", \"from\"),\r\n        new go.Binding(\"toLinkable\", \"to\"),\r\n        new go.Binding(\"fill\", \"color\"),\r\n        new go.Binding(\"figure\").makeTwoWay()\r\n      ),\r\n      $(\r\n        go.TextBlock,\r\n        \"\",\r\n        {\r\n          wrap: go.TextBlock.WrapFit,\r\n          font: \"bold 11pt Helvetica, Arial, sans-serif\",\r\n          stroke: \"whitesmoke\"\r\n        },\r\n        new go.Binding(\"text\", \"name\").makeTwoWay(),\r\n        new go.Binding(\"naturalBounds\", \"textSize\").ofObject()\r\n      )\r\n    ),\r\n    {\r\n      stretch: go.GraphObject.Fill,\r\n      resizable: true,\r\n      minSize: new go.Size(40, 40),\r\n      mouseDrop: function(e, nod) {\r\n        finishDrop(e, nod.containingGroup);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nexport default getRoundedRectangleTemplate;\r\n","import go from \"gojs\";\r\nimport getRectangleTemplate from \"./nodeTemplates/rectangleTemplate\";\r\nimport getTriangleTemplate from \"./nodeTemplates/triangleTemplate\";\r\nimport getRoundedRectangleTemplate from \"./nodeTemplates/roundedRectangleTemplate\";\r\n\r\nfunction getNodeTemplates() {\r\n  let templateMap = new go.Map();\r\n  templateMap.add(\"Triangle\", getTriangleTemplate());\r\n  templateMap.add(\"Rectangle\", getRectangleTemplate());\r\n  templateMap.add(\"RoundedRectangle\", getRoundedRectangleTemplate());\r\n  return templateMap;\r\n}\r\n\r\nexport default getNodeTemplates;\r\n","import go from \"gojs\";\r\n\r\nfunction getGroupTemplate() {\r\n  let $ = go.GraphObject.make;\r\n\r\n  function finishDrop(e, grp) {\r\n    var ok =\r\n      grp !== null\r\n        ? grp.addMembers(grp.diagram.selection, true)\r\n        : e.diagram.commandHandler.addTopLevelParts(e.diagram.selection, true);\r\n    if (!ok) e.diagram.currentTool.doCancel();\r\n  }\r\n\r\n  return $(\r\n    go.Group,\r\n    \"Vertical\",\r\n    {\r\n      background: \"transparent\",\r\n      computesBoundsAfterDrag: true,\r\n      mouseDrop: finishDrop,\r\n      handlesDragDropForMembers: true,\r\n      //resizable: true,\r\n      // selectionObjectName: \"SHAPE\",\r\n      // locationObjectName: \"SHAPE\",\r\n      // resizeObjectName: \"SHAPE\",\r\n      layout: $(go.GridLayout, {\r\n        wrappingWidth: Infinity,\r\n        alignment: go.GridLayout.Position,\r\n        cellSize: new go.Size(1, 1),\r\n        spacing: new go.Size(4, 4)\r\n      })\r\n    },\r\n    $(\r\n      go.TextBlock,\r\n      {\r\n        name: \"TxtBlock\",\r\n        alignment: go.Spot.Left,\r\n        font: \"Bold 12pt Sans-Serif\",\r\n        editable: true\r\n      },\r\n      new go.Binding(\"text\", \"Name\")\r\n    ),\r\n    $(\r\n      go.Panel,\r\n      \"Auto\",\r\n      $(\r\n        go.Shape,\r\n        \"RoundedRectangle\",\r\n        {\r\n          name: \"SHAPE\",\r\n          parameter1: 14,\r\n          fill: \"rgba(128,128,128,0.33)\",\r\n          minSize: new go.Size(80, 80)\r\n        },\r\n        new go.Binding(\r\n          \"desiredSize\",\r\n          \"desiredSize\",\r\n          size =>\r\n            new go.Size(size.width, size.height - (size.height > 40 ? 20 : 0))\r\n        ).ofObject()\r\n      ),\r\n      $(go.Placeholder, { padding: 5 })\r\n    ),\r\n    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(\r\n      go.Point.stringify\r\n    )\r\n  );\r\n}\r\n\r\nexport default getGroupTemplate;\r\n","import go from \"gojs\";\r\n\r\nfunction getLinkTemplate() {\r\n  let $ = go.GraphObject.make;\r\n\r\n  return $(\r\n    go.Link,\r\n    {\r\n      routing: go.Link.Orthogonal,\r\n      corner: 5,\r\n      curve: go.Link.JumpOver,\r\n      toShortLength: 4,\r\n      relinkableFrom: true,\r\n      relinkableTo: true,\r\n      reshapable: true,\r\n      resegmentable: true\r\n    },\r\n    $(go.Shape, { isPanelMain: true, stroke: \"green\", strokeWidth: 2 }),\r\n    $(go.Shape, { toArrow: \"standard\", stroke: null, fill: \"green\" }),\r\n    $(\r\n      go.Panel,\r\n      \"Auto\",\r\n      $(go.Shape, \"RoundedRectangle\", { fill: \"#F8F8F8\", stroke: \"green\" }),\r\n      $(\r\n        go.TextBlock,\r\n        \"Info\",\r\n        {\r\n          width: 100,\r\n          wrap: go.TextBlock.WrapFit,\r\n          isMultiline: true,\r\n          textAlign: \"center\",\r\n          font: \"10pt helvetica, arial, sans-serif\",\r\n          stroke: \"#333333\",\r\n          editable: true\r\n        },\r\n        new go.Binding(\"text\").makeTwoWay()\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nexport default getLinkTemplate;\r\n","import go from \"gojs\";\r\n\r\nfunction addLinkValidationToDiagram(diagram) {\r\n  let sameFigure = (fromnode, fromport, tonode, toport) => {\r\n    return fromnode.data.figure !== tonode.data.figure;\r\n  };\r\n\r\n  diagram.toolManager.linkingTool.linkValidation = sameFigure;\r\n  diagram.toolManager.relinkingTool.linkValidation = sameFigure;\r\n\r\n  diagram.model.linkFromPortIdProperty = \"fromPort\";\r\n  diagram.model.linkToPortIdProperty = \"toPort\";\r\n  diagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;\r\n  diagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal;\r\n\r\n  let checkLinks = function(object) {\r\n    object = diagram.findNodeForKey(object.key);\r\n    let connectedLinks = object.findLinksConnected();\r\n\r\n    let toDelete = [];\r\n\r\n    while (connectedLinks.next()) {\r\n      let link = connectedLinks.value;\r\n      if (\r\n        link.fromNode.data.key !== object.data.key &&\r\n        link.fromNode.data.figure === object.data.figure\r\n      ) {\r\n        toDelete.push(link);\r\n      } else if (\r\n        link.toNode.data.key !== object.data.key &&\r\n        link.toNode.data.figure === object.data.figure\r\n      ) {\r\n        toDelete.push(link);\r\n      }\r\n    }\r\n    diagram.startTransaction(\"Remove invalid links\");\r\n    diagram.removeParts(toDelete);\r\n    diagram.commitTransaction(\"Remove invalid links\");\r\n  };\r\n\r\n  diagram.addModelChangedListener(function(e) {\r\n    if (e.propertyName === \"figure\") {\r\n      checkLinks(e.object);\r\n    }\r\n  });\r\n}\r\n\r\nexport default addLinkValidationToDiagram;\r\n","function addShortcutsToDiagram(diagram) {\r\n  let x, y;\r\n  document.addEventListener(\"mousemove\", e => {\r\n    x = e.pageX;\r\n    y = e.pageY;\r\n  });\r\n  document.addEventListener(\"keydown\", e => {\r\n    if (e.shiftKey && e.key === \"D\") {\r\n      diagram.startTransaction(\"add node\");\r\n      diagram.model.addNodeData({\r\n        name: \"Green\",\r\n        stroke: \"white\",\r\n        color: \"Green\",\r\n        category: \"RoundedRectangle\",\r\n        figure: \"RoundedRectangle\",\r\n        from: true,\r\n        to: true,\r\n        loc:\r\n          \"\" +\r\n          (x + diagram.position.x - diagram.div.offsetLeft) +\r\n          \" \" +\r\n          (y + diagram.position.y - diagram.div.offsetTop)\r\n      });\r\n      diagram.commitTransaction(\"add node\");\r\n    }\r\n  });\r\n}\r\n\r\nexport default addShortcutsToDiagram;\r\n","import go from \"gojs\";\r\nimport getNodeTemplates from \"../templates/nodeTemplates\";\r\nimport getGroupTemplate from \"../templates/groupTemplate\";\r\nimport getLinkTemplate from \"../templates/linkTemplate\";\r\nimport addLinkValidationToDiagram from \"../validators/linkValidation\";\r\nimport addShortcutsToDiagram from \"../shortcuts/shortcuts\";\r\n\r\nfunction getDiagram(diagramDiv, modifiedReducer) {\r\n  let $ = go.GraphObject.make;\r\n\r\n  let diagram = $(go.Diagram, diagramDiv, {\r\n    initialContentAlignment: go.Spot.Center,\r\n    allowDrop: true,\r\n    scrollsPageOnFocus: false,\r\n    \"undoManager.isEnabled\": true,\r\n    \"toolManager.mouseWheelBehavior\": go.ToolManager.WheelZoom,\r\n    \"commandHandler.archetypeGroupData\": {\r\n      isGroup: true,\r\n      category: \"OfNodes\"\r\n    }\r\n  });\r\n\r\n  diagram.nodeTemplateMap = getNodeTemplates();\r\n  diagram.groupTemplate = getGroupTemplate();\r\n  diagram.linkTemplate = getLinkTemplate();\r\n  addLinkValidationToDiagram(diagram);\r\n  addShortcutsToDiagram(diagram);\r\n  diagram.addDiagramListener(\"Modified\", e => {\r\n    modifiedReducer(true);\r\n  });\r\n\r\n  return diagram;\r\n}\r\n\r\nexport default getDiagram;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { diagramModified, diagram } from \"../store/actions\";\r\nimport getDiagram from \"../goJs/elements/diagram\";\r\n\r\nclass Diagram extends Component {\r\n  componentDidMount() {\r\n    this.diagram = getDiagram(this.props.id, this.props.diagramModified);\r\n    this.props.diagram(this.diagram);\r\n  }\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    return <div id={this.props.id} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modified: state.modified,\r\n    diagram: state.diagram\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { diagramModified, diagram };\r\n\r\nexport default (Diagram = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Diagram));\r\n","import go from \"gojs\";\r\nimport getNodeTemplates from \"../templates/nodeTemplates\";\r\nimport getGroupTemplate from \"../templates/groupTemplate\";\r\n\r\nfunction getPalette(paletteDiv) {\r\n  let $ = go.GraphObject.make;\r\n  let palette = $(go.Palette, paletteDiv, {\r\n    scrollsPageOnFocus: false,\r\n    model: new go.GraphLinksModel([\r\n      {\r\n        name: \"Green\",\r\n        category: \"RoundedRectangle\",\r\n        figure: \"RoundedRectangle\",\r\n        color: \"Green\",\r\n        from: true,\r\n        to: true\r\n      },\r\n      {\r\n        name: \"Blue\",\r\n        color: \"Blue\",\r\n        category: \"Rectangle\",\r\n        figure: \"Rectangle\",\r\n        from: true,\r\n        to: true\r\n      },\r\n      {\r\n        name: \"Red\",\r\n        color: \"Red\",\r\n        category: \"Triangle\",\r\n        figure: \"Triangle\",\r\n        from: true,\r\n        to: true\r\n      },\r\n      { stroke: \"white\", Name: \"Group\", isGroup: true }\r\n    ])\r\n  });\r\n\r\n  palette.nodeTemplateMap = getNodeTemplates();\r\n  palette.groupTemplate = getGroupTemplate();\r\n\r\n  return palette;\r\n}\r\n\r\nexport default getPalette;\r\n","import React, { Component } from \"react\";\r\nimport getPalette from \"../goJs/elements/palette\";\r\n\r\nclass Palette extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.palette = getPalette(this.props.id);\r\n  }\r\n\r\n  render() {\r\n    return <div id={this.props.id} />;\r\n  }\r\n}\r\n\r\nexport default Palette;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst UpperBar = ({ id, modified }) => {\r\n  return (\r\n    <div id={id}>\r\n      {modified.modified ? \"Diagramming App*\" : \"Diagramming App\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modified: state.modified\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UpperBar);\r\n","import React from \"react\";\n\nconst Select = ({ options, onChange, def, ...rest }) => {\n  return (\n    <select onChange={onChange} {...rest} defaultValue={def}>\n      {options.map((option, n) => (\n        <option key={n} value={option.value}>\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\r\nimport Select from \"./common/select\";\r\nimport go from \"gojs\";\r\n\r\nclass Inspector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.nameInput = \"\";\r\n    this.state.colorSelect = \"\";\r\n    this.state.categorySelect = \"\";\r\n    this.state.inspectedObject = null;\r\n  }\r\n\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    let { diagram } = this.props;\r\n    diagram.addModelChangedListener(e => {\r\n      if (e.isTransactionFinished) {\r\n        this.inspectObject();\r\n      }\r\n    });\r\n    diagram.addDiagramListener(\"ChangedSelection\", () => {\r\n      this.inspectObject();\r\n    });\r\n  }\r\n\r\n  inspectObject = object => {\r\n    let { diagram } = this.props;\r\n    let inspectedObject = object;\r\n    if (inspectedObject === undefined) {\r\n      inspectedObject = diagram.selection.first();\r\n      this.updateFields();\r\n    }\r\n    if (\r\n      inspectedObject instanceof go.Group ||\r\n      inspectedObject instanceof go.Link\r\n    ) {\r\n      this.setState({ inspectedObject: null });\r\n      return;\r\n    }\r\n    if (inspectedObject === null || this.inspectedObject === inspectedObject) {\r\n      this.setState({ inspectedObject });\r\n    }\r\n    this.setState({ inspectedObject });\r\n    this.updateFields();\r\n  };\r\n\r\n  updateFields = () => {\r\n    if (\r\n      this.state.inspectedObject !== null &&\r\n      this.state.inspectedObject.data !== null &&\r\n      this.state.inspectedObject !== undefined\r\n    ) {\r\n      this.setState({\r\n        nameInput: this.state.inspectedObject.data.name,\r\n        colorSelect: this.state.inspectedObject.data.color,\r\n        figureSelect: this.state.inspectedObject.data.figure\r\n      });\r\n    }\r\n  };\r\n\r\n  update = (value, name) => {\r\n    let { diagram } = this.props;\r\n    let { inspectedObject } = this.state;\r\n    if (inspectedObject === null) return;\r\n    diagram.startTransaction(\"set all properties\");\r\n    diagram.model.setDataProperty(inspectedObject.data, name, value);\r\n    diagram.commitTransaction(\"set all properties\");\r\n  };\r\n\r\n  render() {\r\n    if (this.state.inspectedObject === null) {\r\n      return <div id={this.props.id} />;\r\n    }\r\n\r\n    return (\r\n      <div id={this.props.id}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={e => this.update(e.target.value, \"name\")}\r\n          value={this.state.nameInput}\r\n        />\r\n        <Select\r\n          onChange={e => this.update(e.target.value, \"color\")}\r\n          options={this.colors}\r\n          value={this.state.colorSelect}\r\n        />\r\n        <Select\r\n          onChange={e => this.update(e.target.value, \"figure\")}\r\n          options={this.figures}\r\n          value={this.state.figureSelect}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  colors = [\r\n    { value: \"Green\", label: \"Green\" },\r\n    { value: \"Grey\", label: \"Grey\" },\r\n    { value: \"Blue\", label: \"Blue\" },\r\n    { value: \"Red\", label: \"Red\" },\r\n    { value: \"Purple\", label: \"Purple\" }\r\n  ];\r\n\r\n  figures = [\r\n    { value: \"RoundedRectangle\", label: \"Rounded Rectangle\" },\r\n    { value: \"Triangle\", label: \"Triangle\" },\r\n    { value: \"Rectangle\", label: \"Rectangle\" }\r\n  ];\r\n}\r\n\r\nexport default Inspector;\r\n","import go from \"gojs\";\r\n\r\nfunction getTools(diagram, modifiedReducer) {\r\n  return [\r\n    {\r\n      name: \"Zoom In\",\r\n      onClick: () => diagram.commandHandler.increaseZoom()\r\n    },\r\n    {\r\n      name: \"Zoom Out\",\r\n      onClick: () => diagram.commandHandler.decreaseZoom()\r\n    },\r\n    {\r\n      name: \"Undo\",\r\n      onClick: () => diagram.commandHandler.undo()\r\n    },\r\n    {\r\n      name: \"Redo\",\r\n      onClick: () => diagram.commandHandler.redo()\r\n    },\r\n    {\r\n      name: \"Save\",\r\n      onClick: () => {\r\n        sessionStorage.savedDiagram = diagram.model.toJson();\r\n        diagram.isModified = false;\r\n        modifiedReducer(false);\r\n      }\r\n    },\r\n    {\r\n      name: \"Load\",\r\n      onClick: () => {\r\n        if (sessionStorage.savedDiagram) {\r\n          diagram.model = go.Model.fromJson(sessionStorage.savedDiagram);\r\n        }\r\n      }\r\n    }\r\n  ];\r\n}\r\n\r\nexport default getTools;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { diagramModified } from \"../store/actions\";\r\nimport getTools from \"../goJs/tools/tools\";\r\n\r\nclass Tools extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      Object.keys(this.props.diagram).length !== 0 && (\r\n        <div id=\"tools\">\r\n          {getTools(this.props.diagram.diagram, this.props.diagramModified).map(\r\n            tool => (\r\n              <button\r\n                className=\"toolsButton\"\r\n                key={tool.name}\r\n                onClick={tool.onClick}\r\n              >\r\n                {tool.name}\r\n              </button>\r\n            )\r\n          )}\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    diagram: state.diagram,\r\n    modified: state.modified\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { diagramModified };\r\n\r\nexport default (Tools = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tools));\r\n","import go from \"gojs\";\r\n\r\nfunction makeThumbnail(diagram) {\r\n  let image = diagram.makeImage({\r\n    type: \"image/jpg\",\r\n    size: new go.Size(250, 250),\r\n    background: \"white\"\r\n  });\r\n  return image;\r\n}\r\n\r\nexport default makeThumbnail;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport makeThumbnail from \"../goJs/thumbnails/thumbnails\";\r\n\r\nclass Thumbnail extends Component {\r\n  state = {\r\n    image: null\r\n  };\r\n  render() {\r\n    return (\r\n      <div id=\"thumbnail\">\r\n        <button className=\"toolsButton\" onClick={this.makeThumbnail}>\r\n          Make Image\r\n        </button>\r\n        <div>\r\n          <img\r\n            src={this.state.image === null ? \"\" : this.state.image.src}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  makeThumbnail = () => {\r\n    this.setState({\r\n      image:\r\n        Object.keys(this.props.diagram).length !== 0 &&\r\n        makeThumbnail(this.props.diagram.diagram)\r\n    });\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    diagram: state.diagram\r\n  };\r\n};\r\n\r\nexport default (Thumbnail = connect(mapStateToProps)(Thumbnail));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Inspector from \"./inspector\";\r\nimport Tools from \"./tools\";\r\nimport Thumbnail from \"./thumbnail\";\r\n\r\nconst Menu = ({ id, diagram }) => {\r\n  return (\r\n    <div id={id}>\r\n      {Object.keys(diagram).length !== 0 && (\r\n        <Inspector diagram={diagram.diagram} id=\"inspector\" />\r\n      )}\r\n      <Tools />\r\n      <Thumbnail />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    diagram: state.diagram\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n","import React from \"react\";\r\nimport Diagram from \"./components/diagram\";\r\nimport Palette from \"./components/palette\";\r\nimport UpperBar from \"./components/upperBar\";\r\nimport \"../src/styles/styles.css\";\r\nimport Menu from \"./components/menu\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <UpperBar id=\"upperBar\" />\r\n      <div id=\"main\">\r\n        <Palette id=\"palette\" />\r\n        <Diagram id=\"diagram\" />\r\n        <Menu id=\"menu\" />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}